File structure:
- ./src: all the source code 
- ./demos: images that shows each feature
- ./REPORT.txt: an explanation of this project
- ./CHECKLIST.txt: for grading purpose only

Basic features:
- Phong illumination 
- Intersection with sphere 
- Intersection with plane 
- Ray casting

Advanced features:
- Recursive ray tracing
- Anti-aliasing:
	Achieved by shooting more rays per pixel and averaging the colors.
- Depth of field 
	Achieved by shading each pixel with more rays that starts at random places on lens and points to the focal point. 
- Extended light source, soft shadow
- Texure mapping
- Reflection
- Refraction
	Achieved by applying snell's law.
- Fresnel law
	Balanced between refraction and reflection color using fresnel law.
- Glossy effect

External reference:
- A paper explaining how refraction works in graphics:
  http://graphics.stanford.edu/courses/cs148-10-summer/docs/2006--degreve--reflection_refraction.pdf
- Formula for UV mapping
  https://en.wikipedia.org/wiki/UV_mapping
- Various formulas for intersection and ray tracing
  http://www.teach.cs.toronto.edu/~moore/csc418/Notes/BasicRayTracing.pdf

Role of each member:
Ginny is responsible for implementing hard shadow, anti-aliasing, depth of field, refraction and Fresnel law.
Jordan is responsible for implementing basic ray tracing, recursive ray tracing, soft shadows, texture mapping, reflection and glossy effect.
Both two members worked together in setting up scenes and testing features.